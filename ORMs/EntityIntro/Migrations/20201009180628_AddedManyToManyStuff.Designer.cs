// <auto-generated />
using System;
using EntityIntro.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityIntro.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20201009180628_AddedManyToManyStuff")]
    partial class AddedManyToManyStuff
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EntityIntro.Models.Evidence", b =>
                {
                    b.Property<int>("EvidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("EvidenceId");

                    b.ToTable("Evidence");
                });

            modelBuilder.Entity("EntityIntro.Models.Ghost", b =>
                {
                    b.Property<int>("GhostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Type")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GhostId");

                    b.ToTable("Ghosts");
                });

            modelBuilder.Entity("EntityIntro.Models.GhostHasEvidence", b =>
                {
                    b.Property<int>("GhostHasEvidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EvidenceId")
                        .HasColumnType("int");

                    b.Property<int>("GhostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("GhostHasEvidenceId");

                    b.HasIndex("EvidenceId");

                    b.HasIndex("GhostId");

                    b.ToTable("GhostsHaveEvidence");
                });

            modelBuilder.Entity("EntityIntro.Models.Vampire", b =>
                {
                    b.Property<int>("VampireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.HasKey("VampireId");

                    b.ToTable("Vampires");
                });

            modelBuilder.Entity("EntityIntro.Models.Victim", b =>
                {
                    b.Property<int>("VictimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("VampireId")
                        .HasColumnType("int");

                    b.HasKey("VictimId");

                    b.HasIndex("VampireId");

                    b.ToTable("Victims");
                });

            modelBuilder.Entity("EntityIntro.Models.GhostHasEvidence", b =>
                {
                    b.HasOne("EntityIntro.Models.Evidence", "Evidence")
                        .WithMany("GhostHasEvidence")
                        .HasForeignKey("EvidenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityIntro.Models.Ghost", "Ghost")
                        .WithMany("GhostHasEvidence")
                        .HasForeignKey("GhostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EntityIntro.Models.Victim", b =>
                {
                    b.HasOne("EntityIntro.Models.Vampire", "Vampire")
                        .WithMany("Victims")
                        .HasForeignKey("VampireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
